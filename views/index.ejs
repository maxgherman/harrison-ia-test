<html>
  <head>
    <title><%= title %></title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" type="text/css" href="styles.css" />
    <script src="https://cdn.jsdelivr.net/npm/magic-sdk/dist/magic.js"></script>
    <script>
      const magic = new Magic("<%= MAGIC_PUBLISHABLE_KEY %>");
      const serverUrl = window.location.href;
      const render = async () => {
        /* Show login form if user is not logged in */
        let html = `
          <h1>Please sign up or login</h1>
          <form onsubmit="handleLogin(event)">
            <input type="email" name="email" required="required" placeholder="Enter your email" />
            <button type="submit">Send</button>
          </form>
        `;
        /* Get user data including email & apple count */
        let res = await fetch(`${serverUrl}user/`);
        if (res.status == 200) {
          let userData = await res.json();

          html = `
            <h1>Current user: ${userData.email}</h1>
            <button onclick="handleLogout()">Logout</button>

            <form  action='/images'
                method='post'
                encType="multipart/form-data">
                <input type="file" name="sampleFile" />
                <input type="hidden" name="status" value="initial" />
                <input type="hidden" name="labelIds[]" value="1" />
                <input type="hidden" name="labelIds[]" value="2" />
                <input type="hidden" name="labelIds[]" value="3" />
                <input type='submit' value='Upload!' />
            </form>
          `;
        }


        await fetch(`${serverUrl}images/1`, {
            method: "GET",
          })
        .then(response => response.ok ? response.json() : response)
        .then(console.log);


        document.getElementById("app").innerHTML = html;
      };

      const handleLogin = async e => {
        e.preventDefault();
        const email = new FormData(e.target).get("email");
        if (email) {
          const didToken = await magic.auth.loginWithMagicLink({ email });
          token = didToken

          await fetch(`${serverUrl}user/login`, {
            headers: new Headers({
              Authorization: "Bearer " + didToken
            }),
            withCredentials: true,
            credentials: "same-origin",
            method: "POST"
          });
          render();
        }
      };

      const handleLogout = async () => {
        await fetch(`${serverUrl}user/logout`, {
            method: "POST",
            headers: new Headers({
              Authorization: "Bearer " + token
            })
        });
        render();
      };

    </script>
  </head>
  <body onload="render()">
    <div id="app">Loading...</div>
  </body>
</html>
